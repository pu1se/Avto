// <auto-generated />
using System;
using Avto.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Avto.DAL.Migrations
{
    [DbContext(typeof(Storage))]
    partial class StorageModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Avto.DAL.Entities.CurrencyEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Code");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Avto.DAL.Entities.ExchangeRateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExchangeDate")
                        .HasColumnType("Date");

                    b.Property<string>("FromCurrencyCode")
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("LastUpdatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxDayRate")
                        .HasColumnType("decimal(26, 10)");

                    b.Property<decimal>("MinDayRate")
                        .HasColumnType("decimal(26, 10)");

                    b.Property<decimal>("OpenDayRate")
                        .HasColumnType("decimal(26, 10)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(26, 10)");

                    b.Property<string>("ToCurrencyCode")
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeDate");

                    b.HasIndex("FromCurrencyCode");

                    b.HasIndex("ToCurrencyCode");

                    b.ToTable("CurrencyExchangeRates");
                });

            modelBuilder.Entity("Avto.DAL.Entities.LogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExecutionTimeInMillSec")
                        .HasColumnType("bigint");

                    b.Property<string>("HttpMethod")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<DateTime>("LastUpdatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logs")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(8192);

                    b.Property<string>("PathToAction")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<int>("ResponseCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("_Logs");
                });

            modelBuilder.Entity("Avto.DAL.Entities.ExchangeRateEntity", b =>
                {
                    b.HasOne("Avto.DAL.Entities.CurrencyEntity", "FromCurrencyEntity")
                        .WithMany()
                        .HasForeignKey("FromCurrencyCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Avto.DAL.Entities.CurrencyEntity", "ToCurrencyEntity")
                        .WithMany()
                        .HasForeignKey("ToCurrencyCode")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
