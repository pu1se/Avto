// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentMS.DAL;

namespace PaymentMS.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190719144705_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaymentMS.DAL.Entities.OrganizationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(512);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("PaymentMS.DAL.Entities.PaymentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("ExternalId");

                    b.Property<string>("ExternalMetadata")
                        .HasMaxLength(2048);

                    b.Property<decimal>("PaymentAmount");

                    b.Property<string>("PaymentCurrency")
                        .HasMaxLength(8);

                    b.Property<Guid>("ReceivingWayId");

                    b.Property<Guid>("SendingWayId");

                    b.Property<string>("TransactionLog")
                        .HasMaxLength(8192);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ReceivingWayId");

                    b.HasIndex("SendingWayId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PaymentMS.DAL.Entities.PaymentReceivingWayEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("OrganizationId");

                    b.Property<int>("PaymentProvider");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("PaymentReceivingWays");
                });

            modelBuilder.Entity("PaymentMS.DAL.Entities.PaymentSendingWayEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Configuration")
                        .HasMaxLength(4096);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDefault");

                    b.Property<Guid>("OrganizationId");

                    b.Property<int>("PaymentMethod");

                    b.Property<int>("PaymentProvider");

                    b.Property<Guid>("ReceivingWayId");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ReceivingWayId");

                    b.ToTable("PaymentSendingWays");
                });

            modelBuilder.Entity("PaymentMS.DAL.Entities.PaymentEntity", b =>
                {
                    b.HasOne("PaymentMS.DAL.Entities.PaymentReceivingWayEntity", "ReceivingWay")
                        .WithMany("Payments")
                        .HasForeignKey("ReceivingWayId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PaymentMS.DAL.Entities.PaymentSendingWayEntity", "SendingWay")
                        .WithMany("Payments")
                        .HasForeignKey("SendingWayId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PaymentMS.DAL.Entities.PaymentReceivingWayEntity", b =>
                {
                    b.HasOne("PaymentMS.DAL.Entities.OrganizationEntity", "Organization")
                        .WithMany("ReceivingWays")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PaymentMS.DAL.Entities.PaymentSendingWayEntity", b =>
                {
                    b.HasOne("PaymentMS.DAL.Entities.OrganizationEntity", "Organization")
                        .WithMany("SendingWays")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PaymentMS.DAL.Entities.PaymentReceivingWayEntity", "ReceivingWay")
                        .WithMany("SendingWays")
                        .HasForeignKey("ReceivingWayId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
